{:rename-macros {}, :renames {}, :use-macros {validate-args-macro re-com.validate, handler-fn re-com.core}, :excludes #{}, :name re-com.misc, :imports nil, :requires {re-com.util re-com.util, re-com.popover re-com.popover, re-com.box re-com.box, re-com.validate re-com.validate, reagent reagent.core, reagent.core reagent.core}, :uses {align-style re-com.box, html-attr? re-com.validate, h-box re-com.box, string-or-atom? re-com.validate, deref-or-value re-com.util, throbber-sizes-list re-com.validate, throbber-size? re-com.validate, regex? re-com.validate, css-style? re-com.validate, box re-com.box, px re-com.util, string-or-hiccup? re-com.validate, v-box re-com.box, flex-child-style re-com.box, input-status-type? re-com.validate, popover-tooltip re-com.popover, line re-com.box, number-or-string? re-com.validate, input-status-types-list re-com.validate, gap re-com.box}, :defs {input-textarea {:protocol-inline nil, :meta {:file "/Users/simon/workspace/swinging-needle-meter/docs/js/compiled/out/re_com/misc.cljs", :line 192, :column 7, :end-line 192, :end-column 21, :arglists (quote ([& args])), :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(args)], :arglists ([& args]), :arglists-meta (nil)}}, :name re-com.misc/input-textarea, :variadic true, :file "docs/js/compiled/out/re_com/misc.cljs", :end-column 21, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(args)], :arglists ([& args]), :arglists-meta (nil)}, :method-params [(args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 192, :end-line 192, :max-fixed-arity 0, :fn-var true, :arglists ([& args])}, slider {:protocol-inline nil, :meta {:file "/Users/simon/workspace/swinging-needle-meter/docs/js/compiled/out/re_com/misc.cljs", :line 314, :column 7, :end-line 314, :end-column 13, :arglists (quote ([])), :doc "Returns markup for an HTML5 slider input"}, :name re-com.misc/slider, :variadic false, :file "docs/js/compiled/out/re_com/misc.cljs", :end-column 13, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 314, :end-line 314, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :doc "Returns markup for an HTML5 slider input"}, progress-bar-args-desc {:name re-com.misc/progress-bar-args-desc, :file "docs/js/compiled/out/re_com/misc.cljs", :line 354, :column 1, :end-line 354, :end-column 28, :meta {:file "/Users/simon/workspace/swinging-needle-meter/docs/js/compiled/out/re_com/misc.cljs", :line 354, :column 6, :end-line 354, :end-column 28}}, progress-bar {:protocol-inline nil, :meta {:file "/Users/simon/workspace/swinging-needle-meter/docs/js/compiled/out/re_com/misc.cljs", :line 363, :column 7, :end-line 363, :end-column 19, :arglists (quote ([& {:keys [model width striped? class bar-class style attr], :or {width "100%"}, :as args}])), :doc "Render a bootstrap styled progress bar", :top-fn {:variadic true, :max-fixed-arity 0, :method-params [({:keys [model width striped? class bar-class style attr], :or {width "100%"}, :as args})], :arglists ([& {:keys [model width striped? class bar-class style attr], :or {width "100%"}, :as args}]), :arglists-meta (nil)}}, :name re-com.misc/progress-bar, :variadic true, :file "docs/js/compiled/out/re_com/misc.cljs", :end-column 19, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [({:keys [model width striped? class bar-class style attr], :or {width "100%"}, :as args})], :arglists ([& {:keys [model width striped? class bar-class style attr], :or {width "100%"}, :as args}]), :arglists-meta (nil)}, :method-params [({:keys [model width striped? class bar-class style attr], :or {width "100%"}, :as args})], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 363, :end-line 363, :max-fixed-arity 0, :fn-var true, :arglists ([& {:keys [model width striped? class bar-class style attr], :or {width "100%"}, :as args}]), :doc "Render a bootstrap styled progress bar"}, input-text {:protocol-inline nil, :meta {:file "/Users/simon/workspace/swinging-needle-meter/docs/js/compiled/out/re_com/misc.cljs", :line 182, :column 7, :end-line 182, :end-column 17, :arglists (quote ([& args])), :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(args)], :arglists ([& args]), :arglists-meta (nil)}}, :name re-com.misc/input-text, :variadic true, :file "docs/js/compiled/out/re_com/misc.cljs", :end-column 17, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(args)], :arglists ([& args]), :arglists-meta (nil)}, :method-params [(args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 182, :end-line 182, :max-fixed-arity 0, :fn-var true, :arglists ([& args])}, radio-button {:protocol-inline nil, :meta {:file "/Users/simon/workspace/swinging-needle-meter/docs/js/compiled/out/re_com/misc.cljs", :line 262, :column 7, :end-line 262, :end-column 19, :arglists (quote ([& {:keys [model on-change value label disabled? style label-class label-style attr], :as args}])), :doc "I return the markup for a radio button, with an optional RHS label", :top-fn {:variadic true, :max-fixed-arity 0, :method-params [({:keys [model on-change value label disabled? style label-class label-style attr], :as args})], :arglists ([& {:keys [model on-change value label disabled? style label-class label-style attr], :as args}]), :arglists-meta (nil)}}, :name re-com.misc/radio-button, :variadic true, :file "docs/js/compiled/out/re_com/misc.cljs", :end-column 19, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [({:keys [model on-change value label disabled? style label-class label-style attr], :as args})], :arglists ([& {:keys [model on-change value label disabled? style label-class label-style attr], :as args}]), :arglists-meta (nil)}, :method-params [({:keys [model on-change value label disabled? style label-class label-style attr], :as args})], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 262, :end-line 262, :max-fixed-arity 0, :fn-var true, :arglists ([& {:keys [model on-change value label disabled? style label-class label-style attr], :as args}]), :doc "I return the markup for a radio button, with an optional RHS label"}, checkbox {:protocol-inline nil, :meta {:file "/Users/simon/workspace/swinging-needle-meter/docs/js/compiled/out/re_com/misc.cljs", :line 212, :column 7, :end-line 212, :end-column 15, :arglists (quote ([& {:keys [model on-change label disabled? style label-class label-style attr], :as args}])), :doc "I return the markup for a checkbox, with an optional RHS label", :top-fn {:variadic true, :max-fixed-arity 0, :method-params [({:keys [model on-change label disabled? style label-class label-style attr], :as args})], :arglists ([& {:keys [model on-change label disabled? style label-class label-style attr], :as args}]), :arglists-meta (nil)}}, :name re-com.misc/checkbox, :variadic true, :file "docs/js/compiled/out/re_com/misc.cljs", :end-column 15, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [({:keys [model on-change label disabled? style label-class label-style attr], :as args})], :arglists ([& {:keys [model on-change label disabled? style label-class label-style attr], :as args}]), :arglists-meta (nil)}, :method-params [({:keys [model on-change label disabled? style label-class label-style attr], :as args})], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 212, :end-line 212, :max-fixed-arity 0, :fn-var true, :arglists ([& {:keys [model on-change label disabled? style label-class label-style attr], :as args}]), :doc "I return the markup for a checkbox, with an optional RHS label"}, checkbox-args-desc {:name re-com.misc/checkbox-args-desc, :file "docs/js/compiled/out/re_com/misc.cljs", :line 201, :column 1, :end-line 201, :end-column 24, :meta {:file "/Users/simon/workspace/swinging-needle-meter/docs/js/compiled/out/re_com/misc.cljs", :line 201, :column 6, :end-line 201, :end-column 24}}, throbber-args-desc {:name re-com.misc/throbber-args-desc, :file "docs/js/compiled/out/re_com/misc.cljs", :line 15, :column 1, :end-line 15, :end-column 24, :meta {:file "/Users/simon/workspace/swinging-needle-meter/docs/js/compiled/out/re_com/misc.cljs", :line 15, :column 6, :end-line 15, :end-column 24}}, radio-button-args-desc {:name re-com.misc/radio-button-args-desc, :file "docs/js/compiled/out/re_com/misc.cljs", :line 251, :column 1, :end-line 251, :end-column 28, :meta {:file "/Users/simon/workspace/swinging-needle-meter/docs/js/compiled/out/re_com/misc.cljs", :line 251, :column 6, :end-line 251, :end-column 28}}, input-text-base {:protocol-inline nil, :meta {:file "/Users/simon/workspace/swinging-needle-meter/docs/js/compiled/out/re_com/misc.cljs", :line 72, :column 8, :end-line 72, :end-column 23, :private true, :arglists (quote ([& {:keys [model input-type], :as args}])), :doc "Returns markup for a basic text input label", :top-fn {:variadic true, :max-fixed-arity 0, :method-params [({:keys [model input-type], :as args})], :arglists ([& {:keys [model input-type], :as args}]), :arglists-meta (nil)}}, :private true, :name re-com.misc/input-text-base, :variadic true, :file "docs/js/compiled/out/re_com/misc.cljs", :end-column 23, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [({:keys [model input-type], :as args})], :arglists ([& {:keys [model input-type], :as args}]), :arglists-meta (nil)}, :method-params [({:keys [model input-type], :as args})], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 72, :end-line 72, :max-fixed-arity 0, :fn-var true, :arglists ([& {:keys [model input-type], :as args}]), :doc "Returns markup for a basic text input label"}, slider-args-desc {:name re-com.misc/slider-args-desc, :file "docs/js/compiled/out/re_com/misc.cljs", :line 302, :column 1, :end-line 302, :end-column 22, :meta {:file "/Users/simon/workspace/swinging-needle-meter/docs/js/compiled/out/re_com/misc.cljs", :line 302, :column 6, :end-line 302, :end-column 22}}, input-password {:protocol-inline nil, :meta {:file "/Users/simon/workspace/swinging-needle-meter/docs/js/compiled/out/re_com/misc.cljs", :line 187, :column 7, :end-line 187, :end-column 21, :arglists (quote ([& args])), :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(args)], :arglists ([& args]), :arglists-meta (nil)}}, :name re-com.misc/input-password, :variadic true, :file "docs/js/compiled/out/re_com/misc.cljs", :end-column 21, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(args)], :arglists ([& args]), :arglists-meta (nil)}, :method-params [(args)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 187, :end-line 187, :max-fixed-arity 0, :fn-var true, :arglists ([& args])}, input-text-args-desc {:name re-com.misc/input-text-args-desc, :file "docs/js/compiled/out/re_com/misc.cljs", :line 47, :column 1, :end-line 47, :end-column 26, :meta {:file "/Users/simon/workspace/swinging-needle-meter/docs/js/compiled/out/re_com/misc.cljs", :line 47, :column 6, :end-line 47, :end-column 26}}, throbber {:protocol-inline nil, :meta {:file "/Users/simon/workspace/swinging-needle-meter/docs/js/compiled/out/re_com/misc.cljs", :line 22, :column 7, :end-line 22, :end-column 15, :arglists (quote ([& {:keys [size color class style attr], :as args}])), :doc "Render an animated throbber using CSS", :top-fn {:variadic true, :max-fixed-arity 0, :method-params [({:keys [size color class style attr], :as args})], :arglists ([& {:keys [size color class style attr], :as args}]), :arglists-meta (nil)}}, :name re-com.misc/throbber, :variadic true, :file "docs/js/compiled/out/re_com/misc.cljs", :end-column 15, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [({:keys [size color class style attr], :as args})], :arglists ([& {:keys [size color class style attr], :as args}]), :arglists-meta (nil)}, :method-params [({:keys [size color class style attr], :as args})], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 22, :end-line 22, :max-fixed-arity 0, :fn-var true, :arglists ([& {:keys [size color class style attr], :as args}]), :doc "Render an animated throbber using CSS"}}, :require-macros {re-com.core re-com.core, re-com.validate re-com.validate, reagent reagent.core, reagent.core reagent.core}, :cljs.analyzer/constants {:seen #{:role :description :min :children :align :bar-class :regular :ul :color :placeholder :disabled :font-size :transition :password :on-mouse-out :default :name :li :margin-left :value :background-color :width :start :on-blur :cursor :type :padding-right :on-click :size :title :validating :center :style :textarea :input-type :rows :on-key-up :div :showing? :right-center :padding-left :status :max :opacity :label :class :checked :change-on-blur? :code :label-style :validation-regex :position :validate-fn :br :on-mouse-over :child :anchor :input :align-self :on-change :disabled? :status-icon? :step :striped? :i :required :label-class :height :span :status-tooltip :model :attr}, :order [:name :required :type :default :validate-fn :description :size :regular :span :color :class :style :attr :code :br :li :background-color :align :start :child :ul :model :on-change :status :status-icon? :status-tooltip :placeholder :width :height :rows :change-on-blur? :validation-regex :disabled? :input-type :children :div :password :input :disabled :value :on-blur :on-key-up :padding-right :textarea :label :position :right-center :showing? :anchor :validating :on-mouse-over :on-mouse-out :i :opacity :align-self :center :font-size :margin-left :title :label-style :label-class :checked :cursor :on-click :padding-left :min :max :step :striped? :bar-class :role :transition]}, :doc nil}