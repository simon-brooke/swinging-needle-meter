{:rename-macros {}, :renames {}, :use-macros {validate-args-macro re-com.validate, handler-fn re-com.core}, :excludes #{}, :name re-com.text, :imports nil, :requires {re-com.box re-com.box, re-com.util re-com.util, re-com.validate re-com.validate}, :uses {html-attr? re-com.validate, title-level-type? re-com.validate, deep-merge re-com.util, css-style? re-com.validate, box re-com.box, string-or-hiccup? re-com.validate, v-box re-com.box, flex-child-style re-com.box, line re-com.box, title-levels-list re-com.validate}, :defs {label-args-desc {:name re-com.text/label-args-desc, :file "docs/js/compiled/out/re_com/text.cljs", :line 13, :column 3, :end-line 13, :end-column 23, :meta {:file "/Users/simon/workspace/swinging-needle-meter/docs/js/compiled/out/re_com/text.cljs", :line 13, :column 8, :end-line 13, :end-column 23}}, label {:protocol-inline nil, :meta {:file "/Users/simon/workspace/swinging-needle-meter/docs/js/compiled/out/re_com/text.cljs", :line 21, :column 7, :end-line 21, :end-column 12, :arglists (quote ([& {:keys [label on-click width class style attr], :as args}])), :doc "Returns markup for a basic label", :top-fn {:variadic true, :max-fixed-arity 0, :method-params [({:keys [label on-click width class style attr], :as args})], :arglists ([& {:keys [label on-click width class style attr], :as args}]), :arglists-meta (nil)}}, :name re-com.text/label, :variadic true, :file "docs/js/compiled/out/re_com/text.cljs", :end-column 12, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [({:keys [label on-click width class style attr], :as args})], :arglists ([& {:keys [label on-click width class style attr], :as args}]), :arglists-meta (nil)}, :method-params [({:keys [label on-click width class style attr], :as args})], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 21, :end-line 21, :max-fixed-arity 0, :fn-var true, :arglists ([& {:keys [label on-click width class style attr], :as args}]), :doc "Returns markup for a basic label"}, title-args-desc {:name re-com.text/title-args-desc, :file "docs/js/compiled/out/re_com/text.cljs", :line 45, :column 1, :end-line 45, :end-column 21, :meta {:file "/Users/simon/workspace/swinging-needle-meter/docs/js/compiled/out/re_com/text.cljs", :line 45, :column 6, :end-line 45, :end-column 21}}, title {:protocol-inline nil, :meta {:file "/Users/simon/workspace/swinging-needle-meter/docs/js/compiled/out/re_com/text.cljs", :line 55, :column 7, :end-line 55, :end-column 12, :arglists (quote ([& {:keys [label level underline? margin-top margin-bottom class style attr], :or {margin-top "0.6em", margin-bottom "0.3em"}, :as args}])), :doc "A title with four preset levels", :top-fn {:variadic true, :max-fixed-arity 0, :method-params [({:keys [label level underline? margin-top margin-bottom class style attr], :or {margin-top "0.6em", margin-bottom "0.3em"}, :as args})], :arglists ([& {:keys [label level underline? margin-top margin-bottom class style attr], :or {margin-top "0.6em", margin-bottom "0.3em"}, :as args}]), :arglists-meta (nil)}}, :name re-com.text/title, :variadic true, :file "docs/js/compiled/out/re_com/text.cljs", :end-column 12, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [({:keys [label level underline? margin-top margin-bottom class style attr], :or {margin-top "0.6em", margin-bottom "0.3em"}, :as args})], :arglists ([& {:keys [label level underline? margin-top margin-bottom class style attr], :or {margin-top "0.6em", margin-bottom "0.3em"}, :as args}]), :arglists-meta (nil)}, :method-params [({:keys [label level underline? margin-top margin-bottom class style attr], :or {margin-top "0.6em", margin-bottom "0.3em"}, :as args})], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 55, :end-line 55, :max-fixed-arity 0, :fn-var true, :arglists ([& {:keys [label level underline? margin-top margin-bottom class style attr], :or {margin-top "0.6em", margin-bottom "0.3em"}, :as args}]), :doc "A title with four preset levels"}, p {:protocol-inline nil, :meta {:file "/Users/simon/workspace/swinging-needle-meter/docs/js/compiled/out/re_com/text.cljs", :line 77, :column 7, :end-line 77, :end-column 8, :arglists (quote ([& children])), :doc "acts like [:p ]\n\n   Creates a paragraph of body text, expected to have a font-szie of 14px or 15px,\n   which should have limited width.\n\n   Why limited text width?  See http://baymard.com/blog/line-length-readability\n\n   The actualy font-size is inherited.\n\n   At 14px, 450px will yield between 69 and 73 chars.\n   At 15px, 450px will yield about 66 to 70 chars.\n   So we're at the upper end of the prefered 50 to 75 char range.\n\n   If the first child is a map, it is interpreted as a map of styles / attributes.", :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(children)], :arglists ([& children]), :arglists-meta (nil)}}, :name re-com.text/p, :variadic true, :file "docs/js/compiled/out/re_com/text.cljs", :end-column 8, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [(children)], :arglists ([& children]), :arglists-meta (nil)}, :method-params [(children)], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 77, :end-line 77, :max-fixed-arity 0, :fn-var true, :arglists ([& children]), :doc "acts like [:p ]\n\n   Creates a paragraph of body text, expected to have a font-szie of 14px or 15px,\n   which should have limited width.\n\n   Why limited text width?  See http://baymard.com/blog/line-length-readability\n\n   The actualy font-size is inherited.\n\n   At 14px, 450px will yield between 69 and 73 chars.\n   At 15px, 450px will yield about 66 to 70 chars.\n   So we're at the upper end of the prefered 50 to 75 char range.\n\n   If the first child is a map, it is interpreted as a map of styles / attributes."}}, :require-macros {re-com.core re-com.core, re-com.validate re-com.validate}, :cljs.analyzer/constants {:seen #{:description :line-height :min-width :children :align :default :name :margin-top :width :start :type :flex :underline? :on-click :size :style :level :label :class :code :validate-fn :br :child :p :margin-bottom :required :span :attr}, :order [:name :required :type :description :label :validate-fn :on-click :width :class :style :attr :span :code :br :align :start :child :level :default :underline? :margin-top :margin-bottom :children :line-height :size :flex :min-width :p]}, :doc nil}