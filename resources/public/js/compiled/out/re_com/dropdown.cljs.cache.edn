{:rename-macros {}, :renames {}, :use-macros {validate-args-macro re-com.validate, handler-fn re-com.core}, :excludes #{}, :name re-com.dropdown, :imports nil, :requires {re-com.util re-com.util, re-com.box re-com.box, re-com.validate re-com.validate, string clojure.string, clojure.string clojure.string, reagent reagent.core, reagent.core reagent.core}, :uses {align-style re-com.box, html-attr? re-com.validate, position-for-id re-com.util, deref-or-value re-com.util, css-style? re-com.validate, vector-of-maps? re-com.validate, item-for-id re-com.util, flex-child-style re-com.box, number-or-string? re-com.validate}, :defs {choices-with-group-headings {:protocol-inline nil, :meta {:file "/Users/simon/workspace/swinging-needle-meter/docs/js/compiled/out/re_com/dropdown.cljs", :line 26, :column 8, :end-line 26, :end-column 35, :private true, :arglists (quote ([opts group-fn])), :doc "If necessary, inserts group headings entries into the choices"}, :private true, :name re-com.dropdown/choices-with-group-headings, :variadic false, :file "docs/js/compiled/out/re_com/dropdown.cljs", :end-column 35, :method-params ([opts group-fn]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 26, :end-line 26, :max-fixed-arity 2, :fn-var true, :arglists (quote ([opts group-fn])), :doc "If necessary, inserts group headings entries into the choices"}, filter-text-box {:name re-com.dropdown/filter-text-box, :file "docs/js/compiled/out/re_com/dropdown.cljs", :line 153, :column 1, :end-line 153, :end-column 31, :private true, :meta {:file "/Users/simon/workspace/swinging-needle-meter/docs/js/compiled/out/re_com/dropdown.cljs", :line 153, :column 16, :end-line 153, :end-column 31, :private true}, :doc "Render a filter text box"}, filter-choices {:protocol-inline nil, :meta {:file "/Users/simon/workspace/swinging-needle-meter/docs/js/compiled/out/re_com/dropdown.cljs", :line 37, :column 8, :end-line 37, :end-column 22, :private true, :arglists (quote ([choices group-fn label-fn filter-text])), :doc "Filter a list of choices based on a filter string using plain string searches (case insensitive). Less powerful\n   than regex's but no confusion with reserved characters"}, :private true, :name re-com.dropdown/filter-choices, :variadic false, :file "docs/js/compiled/out/re_com/dropdown.cljs", :end-column 22, :method-params ([choices group-fn label-fn filter-text]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 37, :end-line 37, :max-fixed-arity 4, :fn-var true, :arglists (quote ([choices group-fn label-fn filter-text])), :doc "Filter a list of choices based on a filter string using plain string searches (case insensitive). Less powerful\n   than regex's but no confusion with reserved characters"}, move-to-new-choice {:protocol-inline nil, :meta {:file "/Users/simon/workspace/swinging-needle-meter/docs/js/compiled/out/re_com/dropdown.cljs", :line 12, :column 8, :end-line 12, :end-column 26, :private true, :arglists (quote ([choices id-fn id offset])), :doc "In a vector of maps (where each map has an :id), return the id of the choice offset posititions away\n   from id (usually +1 or -1 to go to next/previous). Also accepts :start and :end"}, :private true, :name re-com.dropdown/move-to-new-choice, :variadic false, :file "docs/js/compiled/out/re_com/dropdown.cljs", :end-column 26, :method-params ([choices id-fn id offset]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 12, :end-line 12, :max-fixed-arity 4, :fn-var true, :arglists (quote ([choices id-fn id offset])), :doc "In a vector of maps (where each map has an :id), return the id of the choice offset posititions away\n   from id (usually +1 or -1 to go to next/previous). Also accepts :start and :end"}, show-selected-item {:protocol-inline nil, :meta {:file "/Users/simon/workspace/swinging-needle-meter/docs/js/compiled/out/re_com/dropdown.cljs", :line 72, :column 7, :end-line 72, :end-column 25, :arglists (quote ([node]))}, :name re-com.dropdown/show-selected-item, :variadic false, :file "docs/js/compiled/out/re_com/dropdown.cljs", :end-column 25, :method-params ([node]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 72, :end-line 72, :max-fixed-arity 1, :fn-var true, :arglists (quote ([node]))}, filter-text-box-base {:protocol-inline nil, :meta {:file "/Users/simon/workspace/swinging-needle-meter/docs/js/compiled/out/re_com/dropdown.cljs", :line 134, :column 8, :end-line 134, :end-column 28, :private true, :arglists (quote ([])), :doc "Base function (before lifecycle metadata) to render a filter text box"}, :private true, :name re-com.dropdown/filter-text-box-base, :variadic false, :file "docs/js/compiled/out/re_com/dropdown.cljs", :end-column 28, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 134, :end-line 134, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :doc "Base function (before lifecycle metadata) to render a filter text box"}, make-choice-item {:protocol-inline nil, :meta {:file "/Users/simon/workspace/swinging-needle-meter/docs/js/compiled/out/re_com/dropdown.cljs", :line 127, :column 7, :end-line 127, :end-column 23, :arglists (quote ([id-fn render-fn callback internal-model opt]))}, :name re-com.dropdown/make-choice-item, :variadic false, :file "docs/js/compiled/out/re_com/dropdown.cljs", :end-column 23, :method-params ([id-fn render-fn callback internal-model opt]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 127, :end-line 127, :max-fixed-arity 5, :fn-var true, :arglists (quote ([id-fn render-fn callback internal-model opt]))}, filter-choices-regex {:protocol-inline nil, :meta {:file "/Users/simon/workspace/swinging-needle-meter/docs/js/compiled/out/re_com/dropdown.cljs", :line 51, :column 8, :end-line 51, :end-column 28, :private true, :arglists (quote ([choices group-fn label-fn filter-text])), :doc "Filter a list of choices based on a filter string using regex's (case insensitive). More powerful but can cause\n   confusion for users entering reserved characters such as [ ] * + . ( ) etc."}, :private true, :name re-com.dropdown/filter-choices-regex, :variadic false, :file "docs/js/compiled/out/re_com/dropdown.cljs", :end-column 28, :method-params ([choices group-fn label-fn filter-text]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 51, :end-line 51, :max-fixed-arity 4, :fn-var true, :arglists (quote ([choices group-fn label-fn filter-text])), :doc "Filter a list of choices based on a filter string using regex's (case insensitive). More powerful but can cause\n   confusion for users entering reserved characters such as [ ] * + . ( ) etc."}, single-dropdown-args-desc {:name re-com.dropdown/single-dropdown-args-desc, :file "docs/js/compiled/out/re_com/dropdown.cljs", :line 196, :column 1, :end-line 196, :end-column 31, :meta {:file "/Users/simon/workspace/swinging-needle-meter/docs/js/compiled/out/re_com/dropdown.cljs", :line 196, :column 6, :end-line 196, :end-column 31}}, dropdown-top {:protocol-inline nil, :meta {:file "/Users/simon/workspace/swinging-needle-meter/docs/js/compiled/out/re_com/dropdown.cljs", :line 161, :column 8, :end-line 161, :end-column 20, :private true, :arglists (quote ([])), :doc "Render the top part of the dropdown, with the clickable area and the up/down arrow"}, :private true, :name re-com.dropdown/dropdown-top, :variadic false, :file "docs/js/compiled/out/re_com/dropdown.cljs", :end-column 20, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 161, :end-line 161, :max-fixed-arity 0, :fn-var true, :arglists (quote ([])), :doc "Render the top part of the dropdown, with the clickable area and the up/down arrow"}, filter-choices-by-keyword {:protocol-inline nil, :meta {:file "/Users/simon/workspace/swinging-needle-meter/docs/js/compiled/out/re_com/dropdown.cljs", :line 65, :column 7, :end-line 65, :end-column 32, :arglists (quote ([choices keyword value])), :doc "Filter a list of choices extra data within the choices vector"}, :name re-com.dropdown/filter-choices-by-keyword, :variadic false, :file "docs/js/compiled/out/re_com/dropdown.cljs", :end-column 32, :method-params ([choices keyword value]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 65, :end-line 65, :max-fixed-arity 3, :fn-var true, :arglists (quote ([choices keyword value])), :doc "Filter a list of choices extra data within the choices vector"}, single-dropdown {:protocol-inline nil, :meta {:file "/Users/simon/workspace/swinging-needle-meter/docs/js/compiled/out/re_com/dropdown.cljs", :line 216, :column 7, :end-line 216, :end-column 22, :arglists (quote ([& {:keys [model], :as args}])), :doc "Render a single dropdown component which emulates the bootstrap-choosen style. Sample choices object:\n     [{:id \"AU\" :label \"Australia\"      :group \"Group 1\"}\n      {:id \"US\" :label \"United States\"  :group \"Group 1\"}\n      {:id \"GB\" :label \"United Kingdom\" :group \"Group 1\"}\n      {:id \"AF\" :label \"Afghanistan\"    :group \"Group 2\"}]", :top-fn {:variadic true, :max-fixed-arity 0, :method-params [({:keys [model], :as args})], :arglists ([& {:keys [model], :as args}]), :arglists-meta (nil)}}, :name re-com.dropdown/single-dropdown, :variadic true, :file "docs/js/compiled/out/re_com/dropdown.cljs", :end-column 22, :top-fn {:variadic true, :max-fixed-arity 0, :method-params [({:keys [model], :as args})], :arglists ([& {:keys [model], :as args}]), :arglists-meta (nil)}, :method-params [({:keys [model], :as args})], :protocol-impl nil, :arglists-meta (nil), :column 1, :line 216, :end-line 216, :max-fixed-arity 0, :fn-var true, :arglists ([& {:keys [model], :as args}]), :doc "Render a single dropdown component which emulates the bootstrap-choosen style. Sample choices object:\n     [{:id \"AU\" :label \"Australia\"      :group \"Group 1\"}\n      {:id \"US\" :label \"United States\"  :group \"Group 1\"}\n      {:id \"GB\" :label \"United Kingdom\" :group \"Group 1\"}\n      {:id \"AF\" :label \"Afghanistan\"    :group \"Group 2\"}]"}, choice-item {:protocol-inline nil, :meta {:file "/Users/simon/workspace/swinging-needle-meter/docs/js/compiled/out/re_com/dropdown.cljs", :line 93, :column 8, :end-line 93, :end-column 19, :private true, :arglists (quote ([id label on-click internal-model])), :doc "Render a choice item and set up appropriate mouse events"}, :private true, :name re-com.dropdown/choice-item, :variadic false, :file "docs/js/compiled/out/re_com/dropdown.cljs", :end-column 19, :method-params ([id label on-click internal-model]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 93, :end-line 93, :max-fixed-arity 4, :fn-var true, :arglists (quote ([id label on-click internal-model])), :doc "Render a choice item and set up appropriate mouse events"}, make-group-heading {:protocol-inline nil, :meta {:file "/Users/simon/workspace/swinging-needle-meter/docs/js/compiled/out/re_com/dropdown.cljs", :line 86, :column 8, :end-line 86, :end-column 26, :private true, :arglists (quote ([m])), :doc "Render a group heading"}, :private true, :name re-com.dropdown/make-group-heading, :variadic false, :file "docs/js/compiled/out/re_com/dropdown.cljs", :end-column 26, :method-params ([m]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 86, :end-line 86, :max-fixed-arity 1, :fn-var true, :arglists (quote ([m])), :doc "Render a group heading"}}, :require-macros {re-com.core re-com.core, re-com.validate re-com.validate, reagent reagent.core, reagent.core reagent.core}, :cljs.analyzer/constants {:seen #{:description :auto-complete :tab-index :li.no-results :label-fn :max-height :group :title? :key :placeholder :else :a.chosen-single.chosen-default :render-fn :li.group-result :on-mouse-out :default :div.chosen-drop :name :li :value :component-did-mount :width :start :on-blur :ul.chosen-results :component-did-update :type :regex-filter? :choices :id-fn :on-mouse-down :on-click :title :style :div :reagent-render :label :id :div.chosen-search :class :padding :code :b :display-name :position :filter-box? :validate-fn :br :on-mouse-over :input :align-self :end :on-change :border :group-fn :on-key-down :disabled? :href :required :span :model :attr}, :order [:id-fn :start :end :else :id :group :li.group-result :key :component-did-mount :component-did-update :display-name :reagent-render :li :class :on-mouse-over :on-mouse-out :on-mouse-down :div.chosen-search :input :type :auto-complete :style :value :on-change :on-key-down :on-blur :position :width :padding :border :filter-box? :a.chosen-single.chosen-default :href :tab-index :on-click :span :title :div :b :name :required :validate-fn :description :choices :code :model :default :label-fn :label :group-fn :render-fn :disabled? :regex-filter? :placeholder :title? :max-height :attr :br :align-self :div.chosen-drop :ul.chosen-results :li.no-results]}, :doc nil}