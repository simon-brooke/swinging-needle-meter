{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{}, :name cljs-time.predicates, :imports nil, :requires {time cljs-time.core, cljs-time.core cljs-time.core}, :uses nil, :defs {wednesday? {:protocol-inline nil, :meta {:file "/Users/simon/workspace/swinging-needle-meter/docs/js/compiled/out/cljs_time/predicates.cljs", :line 18, :column 7, :end-line 18, :end-column 17, :arglists (quote ([date-time]))}, :name cljs-time.predicates/wednesday?, :variadic false, :file "docs/js/compiled/out/cljs_time/predicates.cljs", :end-column 17, :method-params ([date-time]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 18, :end-line 18, :max-fixed-arity 1, :fn-var true, :arglists (quote ([date-time]))}, november? {:protocol-inline nil, :meta {:file "/Users/simon/workspace/swinging-needle-meter/docs/js/compiled/out/cljs_time/predicates.cljs", :line 71, :column 7, :end-line 71, :end-column 16, :arglists (quote ([date-time]))}, :name cljs-time.predicates/november?, :variadic false, :file "docs/js/compiled/out/cljs_time/predicates.cljs", :end-column 16, :method-params ([date-time]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 71, :end-line 71, :max-fixed-arity 1, :fn-var true, :arglists (quote ([date-time]))}, june? {:protocol-inline nil, :meta {:file "/Users/simon/workspace/swinging-needle-meter/docs/js/compiled/out/cljs_time/predicates.cljs", :line 56, :column 7, :end-line 56, :end-column 12, :arglists (quote ([date-time]))}, :name cljs-time.predicates/june?, :variadic false, :file "docs/js/compiled/out/cljs_time/predicates.cljs", :end-column 12, :method-params ([date-time]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 56, :end-line 56, :max-fixed-arity 1, :fn-var true, :arglists (quote ([date-time]))}, weekday? {:protocol-inline nil, :meta {:file "/Users/simon/workspace/swinging-needle-meter/docs/js/compiled/out/cljs_time/predicates.cljs", :line 37, :column 7, :end-line 37, :end-column 15, :arglists (quote ([date-time]))}, :name cljs-time.predicates/weekday?, :variadic false, :file "docs/js/compiled/out/cljs_time/predicates.cljs", :end-column 15, :method-params ([date-time]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 37, :end-line 37, :max-fixed-arity 1, :fn-var true, :arglists (quote ([date-time]))}, december? {:protocol-inline nil, :meta {:file "/Users/simon/workspace/swinging-needle-meter/docs/js/compiled/out/cljs_time/predicates.cljs", :line 74, :column 7, :end-line 74, :end-column 16, :arglists (quote ([date-time]))}, :name cljs-time.predicates/december?, :variadic false, :file "docs/js/compiled/out/cljs_time/predicates.cljs", :end-column 16, :method-params ([date-time]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 74, :end-line 74, :max-fixed-arity 1, :fn-var true, :arglists (quote ([date-time]))}, weekend? {:protocol-inline nil, :meta {:file "/Users/simon/workspace/swinging-needle-meter/docs/js/compiled/out/cljs_time/predicates.cljs", :line 34, :column 7, :end-line 34, :end-column 15, :arglists (quote ([date-time]))}, :name cljs-time.predicates/weekend?, :variadic false, :file "docs/js/compiled/out/cljs_time/predicates.cljs", :end-column 15, :method-params ([date-time]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 34, :end-line 34, :max-fixed-arity 1, :fn-var true, :arglists (quote ([date-time]))}, september? {:protocol-inline nil, :meta {:file "/Users/simon/workspace/swinging-needle-meter/docs/js/compiled/out/cljs_time/predicates.cljs", :line 65, :column 7, :end-line 65, :end-column 17, :arglists (quote ([date-time]))}, :name cljs-time.predicates/september?, :variadic false, :file "docs/js/compiled/out/cljs_time/predicates.cljs", :end-column 17, :method-params ([date-time]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 65, :end-line 65, :max-fixed-arity 1, :fn-var true, :arglists (quote ([date-time]))}, march? {:protocol-inline nil, :meta {:file "/Users/simon/workspace/swinging-needle-meter/docs/js/compiled/out/cljs_time/predicates.cljs", :line 47, :column 7, :end-line 47, :end-column 13, :arglists (quote ([date-time]))}, :name cljs-time.predicates/march?, :variadic false, :file "docs/js/compiled/out/cljs_time/predicates.cljs", :end-column 13, :method-params ([date-time]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 47, :end-line 47, :max-fixed-arity 1, :fn-var true, :arglists (quote ([date-time]))}, friday? {:protocol-inline nil, :meta {:file "/Users/simon/workspace/swinging-needle-meter/docs/js/compiled/out/cljs_time/predicates.cljs", :line 24, :column 7, :end-line 24, :end-column 14, :arglists (quote ([date-time]))}, :name cljs-time.predicates/friday?, :variadic false, :file "docs/js/compiled/out/cljs_time/predicates.cljs", :end-column 14, :method-params ([date-time]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 24, :end-line 24, :max-fixed-arity 1, :fn-var true, :arglists (quote ([date-time]))}, saturday? {:protocol-inline nil, :meta {:file "/Users/simon/workspace/swinging-needle-meter/docs/js/compiled/out/cljs_time/predicates.cljs", :line 27, :column 7, :end-line 27, :end-column 16, :arglists (quote ([date-time]))}, :name cljs-time.predicates/saturday?, :variadic false, :file "docs/js/compiled/out/cljs_time/predicates.cljs", :end-column 16, :method-params ([date-time]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 27, :end-line 27, :max-fixed-arity 1, :fn-var true, :arglists (quote ([date-time]))}, monday? {:protocol-inline nil, :meta {:file "/Users/simon/workspace/swinging-needle-meter/docs/js/compiled/out/cljs_time/predicates.cljs", :line 12, :column 7, :end-line 12, :end-column 14, :arglists (quote ([date-time]))}, :name cljs-time.predicates/monday?, :variadic false, :file "docs/js/compiled/out/cljs_time/predicates.cljs", :end-column 14, :method-params ([date-time]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 12, :end-line 12, :max-fixed-arity 1, :fn-var true, :arglists (quote ([date-time]))}, july? {:protocol-inline nil, :meta {:file "/Users/simon/workspace/swinging-needle-meter/docs/js/compiled/out/cljs_time/predicates.cljs", :line 59, :column 7, :end-line 59, :end-column 12, :arglists (quote ([date-time]))}, :name cljs-time.predicates/july?, :variadic false, :file "docs/js/compiled/out/cljs_time/predicates.cljs", :end-column 12, :method-params ([date-time]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 59, :end-line 59, :max-fixed-arity 1, :fn-var true, :arglists (quote ([date-time]))}, april? {:protocol-inline nil, :meta {:file "/Users/simon/workspace/swinging-needle-meter/docs/js/compiled/out/cljs_time/predicates.cljs", :line 50, :column 7, :end-line 50, :end-column 13, :arglists (quote ([date-time]))}, :name cljs-time.predicates/april?, :variadic false, :file "docs/js/compiled/out/cljs_time/predicates.cljs", :end-column 13, :method-params ([date-time]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 50, :end-line 50, :max-fixed-arity 1, :fn-var true, :arglists (quote ([date-time]))}, tuesday? {:protocol-inline nil, :meta {:file "/Users/simon/workspace/swinging-needle-meter/docs/js/compiled/out/cljs_time/predicates.cljs", :line 15, :column 7, :end-line 15, :end-column 15, :arglists (quote ([date-time]))}, :name cljs-time.predicates/tuesday?, :variadic false, :file "docs/js/compiled/out/cljs_time/predicates.cljs", :end-column 15, :method-params ([date-time]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 15, :end-line 15, :max-fixed-arity 1, :fn-var true, :arglists (quote ([date-time]))}, january? {:protocol-inline nil, :meta {:file "/Users/simon/workspace/swinging-needle-meter/docs/js/compiled/out/cljs_time/predicates.cljs", :line 41, :column 7, :end-line 41, :end-column 15, :arglists (quote ([date-time]))}, :name cljs-time.predicates/january?, :variadic false, :file "docs/js/compiled/out/cljs_time/predicates.cljs", :end-column 15, :method-params ([date-time]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 41, :end-line 41, :max-fixed-arity 1, :fn-var true, :arglists (quote ([date-time]))}, sunday? {:protocol-inline nil, :meta {:file "/Users/simon/workspace/swinging-needle-meter/docs/js/compiled/out/cljs_time/predicates.cljs", :line 30, :column 7, :end-line 30, :end-column 14, :arglists (quote ([date-time]))}, :name cljs-time.predicates/sunday?, :variadic false, :file "docs/js/compiled/out/cljs_time/predicates.cljs", :end-column 14, :method-params ([date-time]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 30, :end-line 30, :max-fixed-arity 1, :fn-var true, :arglists (quote ([date-time]))}, february? {:protocol-inline nil, :meta {:file "/Users/simon/workspace/swinging-needle-meter/docs/js/compiled/out/cljs_time/predicates.cljs", :line 44, :column 7, :end-line 44, :end-column 16, :arglists (quote ([date-time]))}, :name cljs-time.predicates/february?, :variadic false, :file "docs/js/compiled/out/cljs_time/predicates.cljs", :end-column 16, :method-params ([date-time]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 44, :end-line 44, :max-fixed-arity 1, :fn-var true, :arglists (quote ([date-time]))}, thursday? {:protocol-inline nil, :meta {:file "/Users/simon/workspace/swinging-needle-meter/docs/js/compiled/out/cljs_time/predicates.cljs", :line 21, :column 7, :end-line 21, :end-column 16, :arglists (quote ([date-time]))}, :name cljs-time.predicates/thursday?, :variadic false, :file "docs/js/compiled/out/cljs_time/predicates.cljs", :end-column 16, :method-params ([date-time]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 21, :end-line 21, :max-fixed-arity 1, :fn-var true, :arglists (quote ([date-time]))}, may? {:protocol-inline nil, :meta {:file "/Users/simon/workspace/swinging-needle-meter/docs/js/compiled/out/cljs_time/predicates.cljs", :line 53, :column 7, :end-line 53, :end-column 11, :arglists (quote ([date-time]))}, :name cljs-time.predicates/may?, :variadic false, :file "docs/js/compiled/out/cljs_time/predicates.cljs", :end-column 11, :method-params ([date-time]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 53, :end-line 53, :max-fixed-arity 1, :fn-var true, :arglists (quote ([date-time]))}, october? {:protocol-inline nil, :meta {:file "/Users/simon/workspace/swinging-needle-meter/docs/js/compiled/out/cljs_time/predicates.cljs", :line 68, :column 7, :end-line 68, :end-column 15, :arglists (quote ([date-time]))}, :name cljs-time.predicates/october?, :variadic false, :file "docs/js/compiled/out/cljs_time/predicates.cljs", :end-column 15, :method-params ([date-time]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 68, :end-line 68, :max-fixed-arity 1, :fn-var true, :arglists (quote ([date-time]))}, august? {:protocol-inline nil, :meta {:file "/Users/simon/workspace/swinging-needle-meter/docs/js/compiled/out/cljs_time/predicates.cljs", :line 62, :column 7, :end-line 62, :end-column 14, :arglists (quote ([date-time]))}, :name cljs-time.predicates/august?, :variadic false, :file "docs/js/compiled/out/cljs_time/predicates.cljs", :end-column 14, :method-params ([date-time]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 62, :end-line 62, :max-fixed-arity 1, :fn-var true, :arglists (quote ([date-time]))}}, :require-macros nil, :doc "### Predicate functions to ask basic questions about a date.\n\n  Was it Monday?\n  (monday? (clj-time.core/date-time 1999 9 9))\n\n  Is it January?\n  (january? (clj-time.core/date-time 2011 1 1))"}